name: Provenance & Cohesion
permissions:
  contents: read

on:
  push:
    branches: [ main, develop, "**/feature/**", "**/improve/**" ]
  pull_request:

env:
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PYTHONUNBUFFERED: "1"
  TZ: America/New_York

jobs:
  validate-provenance:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema pytest

      - name: Validate manifests against schema (if any found)
        shell: bash
        run: |
          SCHEMA="docs/specs/provenance_schema.json"
          if [ ! -f "$SCHEMA" ]; then
            echo "Schema not found at $SCHEMA"; exit 1
          fi
          set -e
          FOUND=0
          shopt -s nullglob
          for m in exports/**/manifest.json tests/fixtures/**/manifest.json; do
            echo "Validating $m"
            python tools/validate_manifest.py --schema "$SCHEMA" --manifest "$m"
            FOUND=1
          done
          if [ $FOUND -eq 0 ]; then
            echo "No manifests found to validate (this is OK for early branches)."
          fi

      - name: Round-trip replay tests (stub)
        if: ${{ hashFiles('tests/**/*.py') != '' }}
        run: |
          # Expect your round-trip tests to be marked 'roundtrip'
          # Example markers:
          # @pytest.mark.roundtrip
          # def test_roundtrip_manifest(...): ...
          python -m pytest -q -k "roundtrip"

      - name: UI contract checks (headless)
        if: ${{ hashFiles('tests/**/*.py') != '' }}
        env:
          QT_QPA_PLATFORM: offscreen
        run: |
          # Expect your UI contract tests to be marked 'ui_contract'
          # and to succeed headlessly (xvfb not required with offscreen).
          python -m pytest -q -k "ui_contract"
